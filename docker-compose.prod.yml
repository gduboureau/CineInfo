version: '3'
services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8080"
    depends_on:
      - database
      - redis
    environment:
      NODE_ENV: production
      DB_USER: postgres
      DATABASE_HOST: database
      DATABASE_NAME: postgres
      DB_PASSWORD: postgre
      DATABASE_PORT: 5432
    networks:
      - app_net
    volumes:
      - backend_data:/app/data

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    ports:
      - "3000:80"
    networks:
      - app_net
    volumes:
      - frontend_data:/usr/share/nginx/html

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgre
    volumes:
      - ./database:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - app_net

  reverse-proxy:
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile.prod
    ports:
      - "8090:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app_net
    volumes:
      - reverse_proxy_data:/var/log/nginx

networks:
  app_net:
    driver: bridge

volumes:
  redis-data:
  backend_data:
  frontend_data:
  database_data:
  reverse_proxy_data:
