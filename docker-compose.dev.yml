# docker-compose.dev.yml
version: '3'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - database
    environment:
      NODE_ENV: development
      DB_USER: postgres
      DATABASE_HOST: database
      DATABASE_NAME: postgres
      DB_PASSWORD: postgre
      DATABASE_PORT: 5432
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgre
    volumes:
      - ./database:/docker-entrypoint-initdb.d
  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  reverseproxy:
    restart: always
    build:
      context: reverse-proxy/
      dockerfile: Dockerfile.dev
    depends_on:
      - backend
      - frontend
    volumes:
      - ./reverse-proxy/log:/var/log/nginx
    ports:
      - "8090:80"

volumes:
  postgres_data:
  redis-data: